<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tag Generator</title>
    <link rel="stylesheet" href="styles.css">
</head>
<body>
    <div class="container">
        <h1>Tag Generator</h1>
        <input type="text" id="inputTitle" placeholder="Enter a title...">
        <button id="generateTags">Generate Tags</button>
        <div id="tagsContainer"></div>
    </div>

    <script>
        const apiKey = "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"; // Replace with your OpenAI API key
        const inputTitle = document.getElementById('inputTitle');
        const generateTags = document.getElementById('generateTags');
        const tagsContainer = document.getElementById('tagsContainer');

        generateTags.addEventListener('click', async () => {
            const userInput = inputTitle.value.trim();
            if (!userInput) {
                alert('Please enter a title to generate tags!');
                return;
            }

            tagsContainer.innerHTML = '<p>Loading...</p>';

            try {
                const response = await fetch('https://api.openai.com/v1/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${apiKey}`
                    },
                    body: JSON.stringify({
                        model: 'text-davinci-003',
                        prompt: `Generate tags for the following title: ${userInput}`,
                        max_tokens: 50,
                        temperature: 0.7
                    })
                });

                if (!response.ok) {
                    const errorDetails = await response.text();
                    throw new Error(`Failed to fetch tags: ${response.status} - ${errorDetails}`);
                }

                const data = await response.json();
                const tags = data.choices[0].text.trim().split(',').map(tag => tag.trim());

                tagsContainer.innerHTML = '';
                tags.forEach(tag => {
                    const tagElement = document.createElement('div');
                    tagElement.className = 'tag';
                    tagElement.textContent = tag;
                    tagsContainer.appendChild(tagElement);
                });
            } catch (error) {
                tagsContainer.innerHTML = '<p>Error generating tags. Please try again.</p>';
                console.error(error);
            }
        });
    </script>
</body>
</html>
